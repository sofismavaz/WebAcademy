/* Crie um arquivo HTML e CSS seguindo as orientações apresentadas na aula sobre seletores, conforme mostrado no slide.
Obs.: Por favor, coloque o link do código do seu Git para que eu possa avaliá-lo. 
Lucir Vaz - Prof.Rodrigo - turma 8
*/

h1, a {
    color: blue;
    text-align: center;
    /* text-transform: uppercase; */
}   

/* seletores agrupados */

p a {
    color: green;
    font-size: 20px;
    text-align: justify;
}   

#logo {
    color: rgb(47, 0, 255);
}

/* Atributo HTML que adiciona um identificador reutilizável na tag. Esse identificar pode ser utilizado no
CSS para selecionarmos o(s) elemento(s): .classe */

.class {
    color: blue;
}
.design {
    color: red;
}
.uderline {
    text-decoration: underline;
}   

/* background ou background-color:  Muda a cor de fundo do elemento.*/
#h1-coresBackground {
    background-color: black;
}
#a-coresBackground {
    background-color:seagreen;
    color: white;
}

/* hexadecimal:  A cor é representada através de um código de 6 caracteres que vão de 0 até F. Exemplo: #000000 (preto) e #FFFFFF (branco). */
#h1-coresHexadecimal {
    background-color: #8844cc;
    color: #000000;
}
#a-coresHexadecimal {
    background-color: #84eeeb;
    color: ffffff;
}

/* rgba(0, 0, 0, 1);  O rgba é uma função que recebe os valores de r (red), g (green), b (blue) e a (alpha).
O rgb vai de 0 até 255 e o alpha vai de 0 até 1. Exemplo: rgba(0, 0, 0, 1) (preto) e rgba(255, 255, 255, 1) (branco). */
.a1 {
    color: rgba(0, 0, 0, 8);
}
.a2 {
    color: rgba(0, 0, 0, 6);
}
.a3 {
    color: rgba(0, 0, 0, 4)
}
.design {
    color: rgba(255, 0, 0, 1);
}

/* Para definir um tamanho ou uma distância, devemos utilizar as unidades de medida específicas do
CSS. 
Podemos classificar essas unidades em absolutas e relativas: 
– Absolutas: cm (centímetro), mm (milimetro), px (pixel); 
– Relativas: a mais utilizada é em, que representa a medida proporcional do elemento onde é
aplicada (em relação ao tamanho da fonte do elemento pai).
*/
.pai {
    font-size: 16px;
}
.filho {
    font-size: 1.2em; /* 120% do tamanho do elemento pai */
}